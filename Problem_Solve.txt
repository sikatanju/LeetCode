// List of problem solved. 
// Started on 22/10/2022;

Total Problem Solved : 70   -- Easy : 37 -- Medium : 33;

*** Arrays : 

1. 22/10/2022
	i. Build Array from permutation -- https://leetcode.com/problems/build-array-from-permutation/                    -- Difficulty : Easy

2. 24/10/22
	i. Two Sum -- https://leetcode.com/problems/two-sum/                                                              -- Difficulty : Easy
	ii. Remove Duplicates from Sorted Array -- https://leetcode.com/problems/remove-duplicates-from-sorted-array/     -- Difficulty : Easy


3. 25/10/22
	i. Remove Element --  https://leetcode.com/problems/remove-element/                                               -- Difficulty : Easy
	
4. 26/10/22
	i. *Container With Most Water -- https://leetcode.com/problems/container-with-most-water/                                -- Difficulty : Medium
	ii. *Search Insert Position -- https://leetcode.com/problems/search-insert-position/                                     -- Difficulty : Easy
	
5. 29/10/22
	i. Minimum Number of Moves to Seat Everyone -- https://leetcode.com/problems/minimum-number-of-moves-to-seat-everyone/   -- Difficulty : Easy
	
6. 30/10/22
	i. Sign of the Product of an Array -- https://leetcode.com/problems/sign-of-the-product-of-an-array/                     -- Difficulty : Easy
	ii. Find First and Last Position of Element in Sorted Array - /find-first-and-last-position-of-element-in-sorted-array/  -- Difficulty : Medium
	// This above one is the first "Medium" difficulty problem, which I've solved by mySelf without any help.
		
7. 31/10/22
	i. Count Number of Distinct Integers After Reverse Operations -- /count-number-of-distinct-integers-after-reverse-operations/ -Difficulty : Medium
	// Needed help about what Data Structure to use. Since, Set doesn't contains any duplicate, Implemented using set.
	
8. 01/11/22
	i. 3Sum (Tried (couldn't complete), 2 Submissions) -- https://leetcode.com/problems/3sum/                	             -- Difficulty : Medium
	
9. 04/11/22
	i. *3Sum --(Completed with 35 ms runtime)               	                                                             -- Difficulty : Medium

10. 05/11/22
	i. *PlusOne  -- https://leetcode.com/problems/plus-one/               	                                                 -- Difficulty : Easy

11. 06/11/22
	i. Permutations -- https://leetcode.com/problems/permutations/]               	                                         -- Difficulty : Medium
	
	07/11/22 -- Permutations
	08/11/22 - Permutations - Later (After learning backTracking).
	
12. 11/11/22
	i. Merger Sorted Array : https://leetcode.com/problems/merge-sorted-array/        	                                     -- Difficulty : Easy

13. 12/11/22
	i. *Best Time to Buy and Sell Stock -- https://leetcode.com/problems/best-time-to-buy-and-sell-stock                     -- Difficulty : Easy

14. 13/11/22
	i. Valid Parenthesis -- https://leetcode.com/problems/valid-parentheses/       	                                         -- Difficulty : Easy
		// Since I've done this problem during Data Structure course. It took only one submission.

	*** After two week off (due to exam and Pabna)...

15. 28/11/22
	i. Climbing Stairs -- https://leetcode.com/problems/climbing-stairs/       	                                           -- Difficulty : Easy

16. 30/11/22
	i. *Sqrt(x) --    https://leetcode.com/problems/sqrtx/      	                                                       -- Difficulty : Easy
	
// Upto Now All the problems were- Array.

*********   String      **********

17. 01/12/22 -- 
	i. Valid Palindrome  -- https://leetcode.com/problems/valid-palindrome/                                                -- Difficulty : Easy

18. 02/12/22
	i. Length of last word -- https://leetcode.com/problems/length-of-last-word/                                           -- Difficulty : Easy
	ii. Valid Anargram -- https://leetcode.com/problems/valid-anagram/                                                     -- Difficulty : Easy

19. 03/12/22
	i. Longest Common Prefix -- https://leetcode.com/problems/longest-common-prefix                                        -- Difficulty : Easy

20. 04/12/22
	i. Reverse Vowel in a String -- https://leetcode.com/problems/reverse-vowels-of-a-string/                              -- Difficulty : Easy
	ii. Longest Substring Without Repeating Characters -- /longest-substring-without-repeating-characters/description/     -- Difficulty : Medium
	// ^-^ This is my second time solving a "Medium" Difficulty Problem without any sort of help.. :)

21. 05/12/22
	i. *Group Anargrams -- https://leetcode.com/problems/group-anagrams                                                     -- Difficulty : Medium
		
************* Stack *****************************
22. 06/12/22
	i. Implementing Queue using Stack -- https://leetcode.com/problems/implement-queue-using-stacks                         -- Difficulty : Easy
	ii. Min Stack                     --    https://leetcode.com/problems/min-stack/                                        -- Difficulty : Medium
	// ^-^ This is the third medium difficulty problem, I've solved without any help. :)

23. 07/12/22
	i. Reorder List                   -- https://leetcode.com/problems/reorder-list/                                        -- Difficulty : Medium
	// ^-^ This is the fourth medium difficulty problem, I've solved without any help. :)

24. 09/12/22
	i. Evaluate Reverse Polish Notation -- https://leetcode.com/problems/evaluate-reverse-polish-notation/                  -- Difficulty : Medium
	// ^-^ This is the fifth medium difficulty problem, I've solved without any help. :)
	
25. 10/12/22
	i. *Basic Calculator II -- https://leetcode.com/problems/basic-calculator-ii/description/                               -- Difficulty : Medium
	// I thought multiplication has to be at first, found out multiplication and division have same presedence (atleast, in this problem).

*********************** Linked List **********************************

26. 12/12/22
	i. Remove Nth Node From End of List - https://leetcode.com/problems/remove-nth-node-from-end-of-list/                  -- Difficulty : Medium

27. 13/12/22
	i. Add Two Numbers -- https://leetcode.com/problems/add-two-numbers/description/                                       -- Difficulty : Medium
	// Solved it by myself, but runtime was slower.

28. 14/12/22
	i. *Swap Node in pairs -- https://leetcode.com/problems/swap-nodes-in-pairs/                                           -- Difficulty : Medium
	ii. Merge Two Sorted Lists -- https://leetcode.com/problems/merge-two-sorted-lists/                                    -- Difficulty : Easy

29. 15/12/22
    i. Copy List with Random Pointer -- https://leetcode.com/problems/copy-list-with-random-pointer/                       -- Difficulty : Medium
       // Solved it without any help :) ... It was a good one.
	ii. Delete the Middle Node of a Linked List -- /problems/delete-the-middle-node-of-a-linked-list/                      -- Difficulty : Medium

**************************** Any  **************************************

30. 17/12/22
	i. Find the Index of the First Occurrence in a String -- /find-the-index-of-the-first-occurrence-in-a-string/          -- Difficulty : Medium
31. 19/12/22
	ii. Sort Colors -- https://leetcode.com/problems/sort-colors/                                                          -- Difficulty : Medium
		// Implemented using QuickSort. with 0ms runtime.
		
32. 31/12/22
	i. Remove Duplicates from Sorted List -- remove-duplicates-from-sorted-list/description/  -- Time : 10 min             -- Difficulty : Easy


******************************** 2023 **************************************

33. 02/01/23
	i. Linked List Cycle -- /problems/linked-list-cycle/ -- Time : 8 min. -- But the runtime was slower                    -- Difficulty : Easy
	ii. Single Number -- /problems/single-number/        -- Time : 9 min.                                                  -- Difficulty : Easy
	iii. Majority Element -- /problems/majority-element/ -- Time : Less than 20 min.                                       -- Difficulty : Easy

34. 03/01/23
	i. Happy Number -- /problems/happy-number/           -- Time : Less than 15 min.                                       -- Difficulty : Easy
	ii. Add Digits --  /problems/add-digits/             -- Time : Less than  5 min.                                       -- Difficulty : Easy

35. 04/01/23
	i. *Implementing Stack using queue -- /implement-stack-using-queues/                                                   -- Difficulty : Easy

36. 05/01/23
	i. *Palindrome LinkedList -- /palindrome-linked-list/                                                                  -- Difficulty : Easy

37. 07/01/23
	i. *Longest Palindromic Substring -- /longest-palindromic-substring/                                                   -- Difficulty : Medium

38. 09/01/23
	i. Rotate List                    -- /rotate-list/                                                                     -- Difficulty : Medium
	// Solved it, but the runtime was slower

39. 10/01/23
	i. Search In Rotated Array        -- /search-in-rotated-sorted-array/                                                  -- Difficulty : Medium
	// Solved it, within 35 minutes with 0ms runtime.

40. 11/01/23
	i. *3Sum Closet                    -- /3sum-closest/                                                                   -- Difficulty : Medium


******************** Binary Search Tree **************************************
	
// After some time, starting fresh.
******************************************************************************

41. 25/02/23
	i. Binary Tree Inorder Traversal -- /binary-tree-inorder-traversal/                                                    -- Difficulty : Easy
	ii. Same Tree --                    /same-tree/                                                                        -- Difficulty : Easy

42. 27/02/23
	i. *Convert Sorted Array To BST -- convert-sorted-array-to-binary-search-tree/                                         -- Difficulty : Easy
	
43. 28/02/23
	i. Convert Sorted List to Binary Search Tree -- convert-sorted-list-to-binary-search-tree/   -- Time : Around 50 min   -- Difficulty : Medium
	
44. 02/03/23
	i. Validate BST --                              /validate-binary-search-tree/                -- Time : Around 1 hour   -- Difficulty : Medium
	
45. 03/03/23
	i. BST LevelOrder Traversal --            /binary-tree-level-order-traversal/                -- Time : Around 40 min   -- Difficulty : Medium
	// Runtime was slower (4ms), so I did it again (by seeing *solution) next day (0ms).

46. 04/03/23
	i. BST LevelOrder Traversal II --        /binary-tree-level-order-traversal-ii/              -- Time : Around 10 min   -- Difficulty : Medium

47. 06/03/23
	i. BST Zigzag LevelOrder Traversal --   /binary-tree-zigzag-level-order-traversal/           -- Time : Around 30 min   -- Difficulty : Medium
	
48. 08/03/23
	i. Maximum Depth of Binary Tree  --     /maximum-depth-of-binary-tree/                      -- Time : Around 5 min     -- Difficulty : Easy
	i. Minimum Depth of Binary Tree  --     /minimum-depth-of-binary-tree/                      -- Time : Around 30 min    -- Difficulty : Easy
	   // * The Runtime was slower, could be improved.
	   
49. 14/03/23
	i. *Sort List --                         /sort-list/                                        -- Time : N\A              -- Difficulty : Medium
	  // Runtime could be improved.

50. 16/03/23
    i. *Search a 2D Matrix II            -- /search-a-2d-matrix-ii/                             -- Time : N\A              -- Difficulty : Medium

51. 18/03/23
    i. Search a 2D Matrix                -- /search-a-2d-matrix/                                -- Time : < 1 hour         -- Difficulty : Medium

52. 19/03/23
    i. Best Time To Buy And Sell Stock II     -- /best-time-to-buy-and-sell-stock-ii/           -- Time : Around 45 min    -- Difficulty : Medium

53. 20/03/23
    i. Spiral Matrix   -- 1 Sub             -- /spiral-matrix/                                  -- Time : < 36 min         -- Difficulty : Medium

54. 22/03/23
    i. *Construct Binary Tree from inorder & preorder -- /construct-binary-tree-from-preorder-and-inorder-traversal/       -- Difficulty : Medium
       // Runtime can be slightly improved & also iterative approach (faster)

55. 26/03/23
    i. *Multiply Strings                    -- /multiply-strings/                               -- Time : N/A              -- Difficulty : Medium
    // Runtime is better than 90%, but still it can be slightly improved.

56. 27/03/23
    i. Intersection of Two Linked Lists   -- /intersection-of-two-linked-lists/                 -- Time : Around 30 min    -- Difficulty : Easy
    //  Runtime can be slightly improved.
	
57. 31/03/23
	i. *Maximum Product Subarray           -- /maximum-product-subarray/                        -- Time : N/A              -- Difficulty : Medium
	// Tried 3 submission in 45 min. Couldn't solve

------------------------------ After Two month Break ----------------------------------

58. 01/06/23
    i. *Insert Delete GetRandom            -- /insert-delete-getrandom-o1/                      -- Time : N/A            -- Difficulty : Medium
    // Submitted 3 times, just couldn't get it right.

59. 02/06/23
    i. Rotate Array                        -- /rotate-array/                                    -- Time : 30 min         -- Difficulty : Medium
    // *Runtime can be improved (Try with LinkedList)

60. 03/06/23
    i. Remove Duplicates from Sorter Array II - /rotate-array/                                    -- Time : 20 min -- Difficulty : Medium
    // Submission accepted first time with 0ms runtime. :)

61. 04/06/23
    i.  Two Sum II:The Array is Sorted     --/two-sum-ii-input-array-is-sorted/                   -- Time : 15 min -- Difficulty : Medium
    ii. Contains Duplicate II              -- /contains-duplicate-ii/                             -- Time : 10 min -- Difficulty : Easy

62. 06/06/23
    i. Is Subsequence                      -- /is-subsequence/                                    -- Time : 10 min -- Difficulty : Easy
    // Runtime can be improved (Done it in 1ms, could be done in 0ms).

63. 10/06/23
    i. *Merge Intervals                    -- /merge-intervals/                                   -- Time : N/A    -- Difficulty : Medium
    // Runtime should be improved, very bad right now. Couldn't solve, had to see solution.

64. 11/06/23
    i.  Reverse Linked List                 -- /reverse-linked-list/                               -- Time : N/A    -- Difficulty : Easy
    ii. Reverse Linked List II              -- /reverse-linked-list-ii/                            -- Time : N/A    -- Difficulty : Medium
    // Accepted on first try. With 0ms runtime. Though it took some time.

65. 12/06/23
    i. Reverse Words in a String            -- /reverse-words-in-a-string/                         -- Time : N/A    -- Difficulty : Medium
    // Runtime is 10ms, I must improve runtime. I've done this problem in Mosh Hamedani Course.

66. 13/06/23
    i. Remove Duplicates from Sorted List II     --/remove-duplicates-from-sorted-list-ii          -- Time : 1 hr   -- Difficulty : Medium
    // Accepted on second try. with 0ms runtime.

67. 16/06/23
    i. *Jump Game                            -- /jump-game/                                         -- Time : N/A    -- Difficulty : Medium
    // Needed help, couldn't solve it.

68. 17/06/23
    i. *Jump Game II                         -- /jump-game-ii/                                      -- Time : N/A    -- Difficulty : Medium

69. 20/06/23
    i. Flatten Binary Tree to Linked List    -- /flatten-binary-tree-to-linked-list/              -- Time : Below 40 min    -- Difficulty : Medium
    // *Done it in 1ms runtime, could be done in 0ms(I think in-place solution takes 0ms).

70. 11/07/23
    i. Set Matrix Zeroes                  -- /set-matrix-zeroes/                              -- Time : Less than 50 min    -- Difficulty : Medium
    // * Runtime : 1ms, it can be slightly improved to 0ms.

71. 13/07/23
    i. Gas Station                       -- /gas-station/                                     -- Time : Less than 50 min    -- Difficulty : Medium
    // *** Runtime is so out of the chart, just barely made it in time. It's not acceptable.

72. 15/07/23
    i. *Invert Binary Tree               -- /invert-binary-tree/                              -- Time : Less than 50 min    -- Difficulty : Easy
    // Although was an easy problem, still needed some help

73. 16/07/23
    i. Partition List                   -- /invert-binary-tree/                               -- Time : Less than 40 min    -- Difficulty : Medium
    // Done it with 0ms runtime, on second submission. :)
	
74. 17/07/23
	i. Path Sum                         --  /path-sum/                                        -- Time : Less than 20 min    -- Difficulty : Easy
	// Accepted on first submission. :) -- 0ms runtime.

75. 18/07/23
    i. *House Robber                    -- /house-robber                                      -- Time : N/A                 -- Difficulty : Medium
    // Needed help :( Little tricky problem.

76. 20/07/23
    i. Odd Even Linked List             --/odd-even-linked-list/                              -- Time : < 20 minutes        -- Difficulty : Medium
    // Accepted on second submission. Could have gotten it on first try, but a silly mistake cost me one submission.

77. 23/07/23
    i. *LRU Cache --                    -- /lru-cache/                                        -- Time : N/A                 -- Difficulty : Medium
    // Needed help, great problem, a lot to think about, also was a "Hard" problem before it was relabeled to "Medium"

78. 29/07/23
    i. Integer to Roman                 -- /integer-to-roman/                                 -- Time : < 15 minutes        -- Difficulty : Medium
    // Accepted on first try :) with 5ms runtime (better than 83% of submissions).

79. 30/07/23
    i. The kth Factor of n             -- /the-kth-factor-of-n/                               -- Time : < 10 minutes        -- Difficulty : Medium

80. 01/08/23
    i. Game of Life                    -- /game-of-life/                                      -- Time : <= 45 minutes       -- Difficulty : Medium
    // Accepted on first submission with 0ms runtime. Memory usage was also better than 99.80% of user with Java

81. 07/08/23
    i. Sum Root to Leaf Numbers        -- /sum-root-to-leaf-numbers/                          -- Time : < 20 minutes        -- Difficulty : Medium
    // Accepted on first submission with 0ms runtime. Memory usage also better than 86.74%

82. 08/08/23
    i. Populating Next Right Pointers in Each Node II
                                      -- /populating-next-right-pointers-in-each-node-ii/     -- Time : < 30 minutes        -- Difficulty : Medium
    // Accepted on first submission with 1ms runtime, runtime could be slightly improved. Memory usage was okay.

83. 10/08/23
    i. *Minimum Path Sum               -- /minimum-path-sum/                                  -- Time : N/A                 -- Difficulty : Medium
    // Needed Help. Runtime can be improved. (Done in 2ms, could be done in 0ms).

84. 14/08/23
    i. Spiral Matrix II                -- /spiral-matrix-ii/                                  -- Time : < 30 min            -- Difficulty : Medium
    // Runtime is 0ms, and memory usage is also fine.

85. 15/08/23
    i. *Path Sum II                    -- /path-sum-ii/                                       -- Time : N/A                 -- Difficulty : Medium
    // Needed help, so close though. Anyway, runtime could be slightly improved from 1ms to 0ms.

******************** 100 problems done. :) *******************************

86. 17/08/23
    i. Find Minimum in Rotated Sorted Array   --  /find-minimum-in-rotated-sorted-array/      -- Time : < 40 min            -- Difficulty : Medium
    // Did it in 0ms, memory usage was also good.

87. 19/08/23
    i. *Find All Anagrams in a String          -- /find-all-anagrams-in-a-string/             -- Time : N/A                 -- Difficulty : Medium
    // Need revise later. Tried for almost 45 minutes, couldn't solve it.
	
88. 20/08/23
	i. Check if a String Is an Acronym of Words -- /check-if-a-string-is-an-acronym-of-words/     -- Time : < 10 min        -- Difficulty : Easy
	ii. Determine the Minimum Sum of a k-avoiding Array  
	                                        /determine-the-minimum-sum-of-a-k-avoiding-array/     -- Time : < 20 min        -- Difficulty : Medium
											
	// Solved both of these problems for Weekly contest.


89. 21/08/23
    i. Path Sum III                          -- /path-sum-iii/                                    -- Time : < 45 min        -- Difficulty : Medium
    // Runtime is way slower, must improve runtime.

90. 23/08/23
    i. *Top K Frequent Elements               -- /top-k-frequent-elements/                        -- Time : N/A             -- Difficulty : Medium
    // Needed Help, Runtime is better than 91%, but a lot could be improved.
    ii. Contains Duplicate                    -- /contains-duplicate/                             -- Time : <2 min          -- Difficulty : Easy
    // Runtime can be improved. Better than 66% though.
    iii. Binary Search                        -- /binary-search/                                  -- Time : <2 min          -- Difficulty : Easy

91. 25/08/23
    i. Kth Smallest Element in a BST          -- /kth-smallest-element-in-a-bst/                  -- Time : < 30 min        -- Difficulty : Medium
    // Runtime : 0ms, Memory : Better than 86%

// ********************************************  After Some time off, Starting Again !!! ***************************************

92. 16/09/23
    i. Kth Largest Element in an Array       -- /kth-largest-element-in-an-array/                 -- Time : < 15 min        -- Difficulty : Medium
    // *** Solved this problem, while learning Heap. Runtime : 65ms beats only 12%, it must be improved.

93. 17/09/23
    i. Implement Trie (Prefix Tree)          -- /implement-trie-prefix-tree/                      -- Time : < 15 min        -- Difficulty : Medium
    // *** Runtime should be improved.

94. 19/09/23
    i. Daily Temperatures                    -- /daily-temperatures/                              -- Time : < 30 min        -- Difficulty : Medium
    // Accepted on 2nd submission without any help, but the runtime is horrible. Runtime must be improved.

95. 23/09/23
    i. *Products of Array Except Self         -- /product-of-array-except-self/                   -- Time : N/A             -- Difficulty : Medium
    // *** Needed Help, And runtime could be slightly improved from 2ms to 1ms.

96. 24/09/23
    i. Count Good Nodes in Binary Tree        -- /count-good-nodes-in-binary-tree/                -- Time : < 30 min        -- Difficulty : Medium
    // Runtime was better than 100%.

97. 25/09/23
    i. Binary Tree Right Side View           -- /binary-tree-right-side-view/                    -- Time : < 20 min         -- Difficulty : Medium
    // Runtime could be slightly improved, mine was 1ms, best was 0ms.

98. 27/09/23
    i. Longest Repeating Character Replacement  -- /longest-repeating-character-replacement/     -- Time : < 50 min         -- Difficulty : Medium
    // Runtime is awful, must improve runtime. :)

99. 01/10/23
    i. *Find The Duplicate Number               -- /find-the-duplicate-number/                   -- Time : N/A              -- Difficulty : Medium
    // Runtime is better, the best runtime uses extra 0(n) space, but the question was asked to solve in O(1) (constant) space.

100. 02/10/23
    i. *Car Fleet                              -- /car-fleet/                                    -- Time : N/A              -- Difficulty : Medium
    // Needed help, very interesting solution, there is no way that would be possible to figure out by me.

101. 05/10/23
    i. *Find K Pairs with Smallest Sums        -- /find-k-pairs-with-smallest-sums/             -- Time : N/A              -- Difficulty : Medium
    // Needed help, runtime could be improved, anyhow, runtime is great. better than 91% & actually uses priorityQueue.

102. 06/10/23
    i.  Summary Ranges                         -- /summary-ranges/                              -- Time : < 20 min         -- Difficulty : Easy
    ii. Isomorphic Strings                     -- /isomorphic-strings/                          -- Time : < 15 min         -- Difficulty : Easy

103. 09/10/23
    i. *Design Add and Search Words Data Structure -- /design-add-and-search-words-data-structure/   -- Time : N/A         -- Difficulty : Medium
    // Needed help. Runtime could be better. Though it doesn't matter that much. If runtime were to improve, memory usage would be more.

104. 10/10/23
    i. Last Stone Weight                      -- /last-stone-weight/                            -- Time : < 10 min         -- Difficulty : Easy
    ii. *Kth Largest Element in a Stream      -- /kth-largest-element-in-a-stream/              -- Time : N/A              -- Difficulty : Easy
    // Needed a little help.

105. 12/10/23
    i. Task Scheduler                         -- /task-scheduler/                               -- Time : <= 1 hour        -- Difficulty : Medium
    // ***Runtime should be improved. Took some time, but it's worth it. Happy to solve it without any help.

106. 14/10/23
    i. *Koko Eating Bananas                   -- /koko-eating-bananas/                          -- Time : N/A              -- Difficulty : Medium
    // Needed help, very intuitive problem, runtime could be improved.

107. 16/10/23
    i. *Longest Consecutive Sequence         -- /longest-consecutive-sequence/                  -- Time : N/A              -- Difficulty : Medium
    // Needed help, runtime could be improved. But don't want to. It's already better than 64%.

108. 18/10/23
    i. *Lowest Common Ancestor               -- /lowest-common-ancestor-of-a-binary-tree/       -- Time : N/A              -- Difficulty : Medium
    // Needed help, no way I could have figured that out that much efficiently. Need Recap later.

109. 24/10/23
    i. Clone Graph                           -- /clone-graph/                                   -- Time : < 50 min         -- Difficulty : Medium
    // Best runtime is 24ms, mine is 32ms (beats 6%). Runtime could be improved.

110. 25/10/23
    i. Course Schedule                       -- /course-schedule/                               -- Time : < 45 min         -- Difficulty : Medium
    // Runtime is not good, it must be improved.

111. 27/10/23
    i. *Surrounded Regions                   -- /surrounded-regions/                            -- Time : N/A              -- Difficulty : Medium
    // Needed help, didn't know how to traverse dfs or bfs through a matrix, understood the solution well though.

112. 28/10/23
    i. Number of Islands                     -- /number-of-islands/                             -- Time : < 30 min         -- Difficulty : Medium
    // Pretty easy if you know how to traverse dfs on a matrix.

113. 01/11/23
    i. Max Area of Island                    -- /max-area-of-island/                            -- Time : < 20 min         -- Difficulty : Medium

114. 03/11/23
    i. Maximum Subarray                      -- /maximum-subarray/                              -- Time : < 20 min         -- Difficulty : Medium
    // Learned Kadane's Algorithm, then it was a cake walk :)

115. 04/11/23
    i. *Maximum Sum Circular Subarray        -- /maximum-sum-circular-subarray/                 -- Time : N/A              -- Difficulty : Medium
    // Needed help. Runtime is good. No change needed.

116. 05/11/23
    i. Subsets                               -- /subsets/                                       -- Time : < 20 min         -- Difficulty : Medium
    // Learned basic backtracking for Subsets, then implemented.

117. 06/11/23
    i. *Simplify Path                        -- /simplify-path/                                 -- Time : N/A              -- Difficulty : Medium
    // Needed help, was so close to solving the problem though. Runtime could be improved (6ms -> 1ms).

118. 07/11/23
    i. Find Peak Element                     -- /find-peak-element/                             -- Time : < 30 min         -- Difficulty : Medium
    // Did it on my own. Had a bit of luck on my side.

119. 08/11/23
    i. *Combination Sum                      -- /combination-sum/                               -- Time : N/A              -- Difficulty : Medium
    // Needed Help, Backtracking. Runtime could be improved (2ms -> 0ms)

120. 09/11/23
    i. Combinations                          -- /combinations/                                  -- Time : < 20 min         -- Difficulty : Medium
    // Runtime could be improved (17ms -> 0ms)

121. 10/11/23
    i. *Subsets II                           -- /subsets-ii/                                    -- Time : N/A              -- Difficulty : Medium
    // Needed help, the problem was little tricky. Runtime do not need to improve (1ms -> 0ms)

122. 11/11/23
    i. *Word Search                          -- /word-search/                                   -- Time : N/A              -- Difficulty : Medium
    // Needed help. Runtime is better than 60%, still it could improved from 145ms -> 6ms or so.

123. 12/11/23
    i. Combination Sum II                    -- /combination-sum-ii/                            -- Time : < 20 min         -- Difficulty : Medium
    // Finally did it on my own. :) Runtime is better than 50%, it could be improved (4ms -> 0ms).

124. 13/11/23
    i. Permutations                          -- /permutations/                                  -- Time : N/A              -- Difficulty : Medium
    // Learnt this problem from NeetCode, then tried to implement it. Runtime is 1ms (beats 94%), could be done in 0ms.

125. 15/11/23
    i. *Generate Parentheses                 -- /generate-parentheses/                          -- Time : N/A              -- Difficulty : Medium
    // Needed Help, runtime is almost best 1ms.

126. 17/11/23
    i. Permutation in String                -- /permutation-in-string/                          -- Time : < 1 hour         -- Difficulty : Medium
    // Solved on my own, but *** runtime is horrible. Runtime must be improved.

127. 18/11/23
    i. Letter Combinations Of A Phone Number
                                            -- /letter-combinations-of-a-phone-number/          -- Time : < 1 hour         -- Difficulty : Medium
    // Did it without any help :). Runtime is also very good (1ms beats 80%, could be done in 0ms). Memory usage is also good.

128. 19/11/23
    i. *Insert Interval                     -- /insert-interval/                                -- Time : N/A              -- Difficulty : Medium
    // Needed help :(

129. 20/11/23
    i. Minimum Size Subarray Sum            -- /minimum-size-subarray-sum/                      -- Time : < 25 min         -- Difficulty : Medium
    // Solved it on my own :), runtime could be improved. (7ms to 1ms). Just use two pointer instead of ArrayDeque.

130. 21/11/23
    i. *Non-overlapping Intervals           -- /non-overlapping-intervals/                      -- Time : < N/A            -- Difficulty : Medium
    // Needed help, the runtime is much slower, 111ms. Must improve runtime.

131. 22/11/23
    i. Zigzag Conversion                    -- /zigzag-conversion/                              -- Time : < 30 min         -- Difficulty : Medium
    // Accepted on first try. Runtime could be improved (7ms -> 1ms).

132. 24/11/23
    i. Valid Sudoku                         -- /valid-sudoku/                                   -- Time : < 35 min         -- Difficulty : Medium
    // Accepted on first try, runtime could be slightly improved (3ms -> 1ms). I think it's fine as it is.

132. 25/11/23
    i. *K Closest Points to Origin          -- /k-closest-points-to-origin/                     -- Time : N/A              -- Difficulty : Medium
    // Needed help, almost solved it, but wrong answered due to duplication. Need to study comparator in details. And runtime should be improved (29ms -> 3-4ms)

133. 26/11/23
    i. *Trapping Rain Water                 -- /trapping-rain-water/                            -- Time : N/A              -- Difficulty : Hard
    // Needed help from Neetcode. Runtime is best. :) This is my first time solving a hard problem.

134. 08/11/23
    i. *Longest Increasing Subsequence       -- /longest-increasing-subsequence/                 -- Time : N/A              -- Difficulty : Medium
    // Dynamic Programming problem, needed help from Neetcode. Understood it really well. Time should be improved.

135. 09/11/23
    i. *WordBreak                            -- /word-break                                      -- Time : N/A              -- Difficulty : Medium
    // DP Problem, needed help from Neetcode. Need to revise later. Time could be improved (4ms -> 0ms)

136. 10/11/23
    i. *Coin Change                          -- /coin-change/                                    -- Time : N/A              -- Difficulty : Medium
    // DP Problem, needed help from Neetcode. Need to revise later. Time could be improved (17ms -> 5ms). Still better than 73%.

137. 11/11/23
    i. *AddBinary                            -- /add-binary/                                     -- Time : N/A              -- Difficulty : Easy
    ii. Number of 1 Bits                     -- /number-of-1-bits/                               -- Time : < 5 min          -- Difficulty : Easy

138. 12/12/23
    i. H-Index                               -- /h-index/                                        -- Time : <40 min          -- Difficulty : Medium
    // Much needed one to regain confidence again. Runtime could be improved from (2ms -> 0ms).

139. 14/12/23
    i. *Pow(x, n)                            -- /powx-n/                                         -- Time : N/A              -- Difficulty : Medium
    // Needed help for optimal solution, solved it kinda, but was throwing exception for very large calculation.

140. 15/12/23
    i. *Factorial Trailing Zeroes            -- /factorial-trailing-zeroes/                      -- Time : N/A              -- Difficulty : Medium
    // Needed, help, very intuitive problem.
    ii. Ransom Note                          -- /ransom-note/                                    -- Time : < 15 min         -- Difficulty : Easy
    // Runtime could be improved (7ms -> 0ms).

141. 16/12/23
    i. Minimum Absolute Difference in BST    -- /minimum-absolute-difference-in-bst/             -- Time : < 30 min         -- Difficulty : Easy
    // Runtime should be improved (6ms -> 0ms).
    ii. Word Pattern                         -- /word-pattern/                                   -- Time : < 20 min         -- Difficulty : Easy
    // Runtime could be improved (1ms -> 0ms).

142. 17/12/23
    i. Course Schedule II                    -- /course-schedule-ii/                             -- Time : < 55 min         -- Difficulty : Medium
    // Runtime should be improved. (12ms -> 1ms)

143. 18/12/23
    i. Single Number II                      -- /single-number-ii/                               -- Time : < 30 min         -- Difficulty : Medium
    // Learned from ChatGPT, runtime still could be improved (3ms -> 0ms)

144. 19/12/23
    i. *Triangle                             -- /triangle/                                       -- Time : N/A              -- Difficulty : Medium
    // DP problem, needed help, need to improve runtime (3ms->0ms) & need to study DP-2D as well.

145. 21/12/23
    i. Rotate Image                          -- /rotate-image/                                   -- Time : < 40 min         -- Difficulty : Medium

146. 22/12/23
    i. *Unique Paths                         -- /unique-paths/                                   -- Time : N/A              -- Difficulty : Medium
    // Learned from NeetCode.

147. 23/12/23
    i. Unique Paths II                       -- /unique-paths-ii/                                -- Time : < 30 min         -- Difficulty : Medium
    // Best runtime I could come with was 1ms, then learned 0ms.

148. 25/12/23
    i. Longest Common Subsequence            -- /longest-common-subsequence/                     -- Time : < 30 min         -- Difficulty : Medium
    // Learned from NeetCode. Runtime is 9ms, still better than 98%.

149. 26/12/23
    i. *Interleaving String                  -- /interleaving-string/                            -- Time : N/A              -- Difficulty : Medium
    // Needed help from Neetcode. Runtime could be improved (3ms -> 0ms).

150. 28/12/23
    i. *Edit Distance                        -- /edit-distance/                                  -- Time : N/A              -- Difficulty : Medium
    // Another 2-D dp problem, Runtime could be better (7ms -> 2ms). Learned from NeetCode.

151. 29/12/23
    i. *Count Complete Tree Nodes            -- /count-complete-tree-nodes/                      -- Time : N/A              -- Difficulty : Easy
    // Needed help, 0ms runtime. Could have solved 0(n) runtime (well, a monkey could have done that).

152. 31/12/23
    i. *Bitwise AND of Numbers Range         -- /bitwise-and-of-numbers-range/                   -- Time : N/A              -- Difficulty : Medium
    // Needed help. Runtime could be improved, but it's a bitwise problem, doesn't really matter.



############################ 2024 ############################

153. 01/01/24
    i. *Construct Quad Tree                 -- /construct-quad-tree/                             -- Time : N/A              -- Difficulty : Medium
    // Needed help, very intuitive approach while solving recursively. Runtime could be improved (1ms -> 0ms).

154. 02/01/24
    i. Reverse Integer                      -- /reverse-integer/                                 -- Time : < 40 min         -- Difficulty : Medium
    // Learned the trick from NeetCode. Then code it myself. Runtime is shown 1ms in my other account, in my main account it shows 3ms. Should learn 0ms solution, much cleaner implementation.

155. 03/01/24
    i. *House Robber II                     -- /house-robber-ii/                                 -- Time :   N/A            -- Difficulty : Medium
    // Needed help, cleared House Robber one problem as well.

156. 04/01/24
    i. *Rotting Oranges                     -- /rotting-oranges/                                 -- Time :   N/A            -- Difficulty : Medium
    // Needed help, runtime is 1ms (best), solved using DFS, also should learn in BFS.

157. 05/01/24
    i. *Palindrome Partitioning             -- /palindrome-partitioning/                         -- Time :   N/A            -- Difficulty : Medium
    // Needed help, runtime is 10ms (best 0ms), I think runtime is better (close to 6ms), but due to same algorithm pattern of previous solutions.

158. 08/01/24
    i. Binary Search Tree Iterator          -- /binary-search-tree-iterator/                     -- Time : < 20 min         -- Difficulty : Medium
    // Was easy one, runtime is 17ms (best is 15ms).

159. 10/01/24
    i. Hand of Straights                    -- /hand-of-straights/                               -- Time : < 35 min         -- Difficulty : Medium
    // Runtime (38ms) is better than 49%, need to improve. Best is 9ms in Java

160. 11/01/24
    i. *Construct Binary Tree from Inorder and Postorder Traversal                               -- Time :   N/A            -- Difficulty : Medium
                                            -- /construct-binary-tree-from-inorder-and-postorder-traversal/
    // Needed help, the core concept is much clearer now. Worth it. :), Runtime could be improved (2ms -> 0ms)

161. 12/01/24
    i. Symmetric Tree                       -- /symmetric-tree/                                  -- Time : < 5 min         -- Difficulty : Easy
    ii. Average of Levels in Binary Tree    -- /average-of-levels-in-binary-tree/                -- Time : < 15 min        -- Difficulty : Easy
    // Runtime could be improved (3ms -> 1ms).

162. 13/01/24
    i. *Basic Calculator                    -- /basic-calculator/                                -- Time :   N/A            -- Difficulty : Hard
    // Needed help, a classic stack problem, runtime is better than 89% (6ms). Could be improved using recursive solution (6ms -> 2ms).

163. 14/01/24 -- Weekly Contest 380
    i. Count Elements With Maximum Frequency-- /count-elements-with-maximum-frequency/           -- Time : < 16 min         -- Difficulty : Easy
    ii. Find Beautiful Indices in the Given Array I
                                            -- /find-beautiful-indices-in-the-given-array-i/     -- Time : < 50 min         -- Difficulty : Medium

164. 15/01/24
    i. *Partition Equal Subset Sum          -- /partition-equal-subset-sum/                      -- Time :  N/A             -- Difficulty : Medium
    // DP problem, needed help from NeetCode. Runtime is horrible, need to optimize it later.

165. 17/01/24
    i. *Reverse Bits                        -- /reverse-bits/                                    -- Time : N/A              -- Difficulty : Easy
    // Needed help, need to review later. Weak in Bit manipulation.

166. 18/01/24
    i. Reverse Nodes in k-Group             -- /reverse-nodes-in-k-group/                        -- Time :  < 36 min        -- Difficulty : Hard
    // First `Hard` problem I've solved on my own ;), Runtime could be slightly improved (1ms -> 0ms).

167. 19/01/24
    i. Merge k Sorted Lists                 -- /merge-k-sorted-lists/                            -- Time :  < 8 min         -- Difficulty : Hard
    // Second `Hard` problem solved on my own :) (Okay I'll stop counting). Runtime is better than 69% at 4ms (best is 2ms).

168. 22/01/24
    i. *Largest Rectangle in Histogram      -- /largest-rectangle-in-histogram/                  -- Time :  N/A             -- Difficulty : Hard
    // Needed help, stack(hard) problem. Runtime is better than 49% at 70ms, could be done in 7ms. Need to improve runtime and revision later.

169. 23/01/24
    i. *Evaluate Division                   -- /evaluate-division/                               -- Time :  N/A             -- Difficulty : Medium
    // Needed help, need to revise the dfs, very intuitive problem, understood graph a little better.

170. 25/01/24
    i. *Minimum Number of Arrows to Burst Balloons
                                            -- /minimum-number-of-arrows-to-burst-balloons/     -- Time :  N/A             -- Difficulty : Medium
    // Needed help, need to review all the intervals problem later.

171. 26/01/24
    i. *Binary Tree Maximum Path Sum        -- /binary-tree-maximum-path-sum/                   -- Time :  N/A             -- Difficulty : Hard
    // Needed help from NeetCode. Completed all the `Binary Tree` problem.


171. 28/01/24 -- Weekly Contest 382
    i. Number of Changing Keys              -- /number-of-changing-keys/                        -- Time : < 5 min          -- Difficulty : Easy
    ii. Alice and Bob Playing Flower Game   -- /alice-and-bob-playing-flower-game/              -- Time :  N/A             -- Difficulty : Medium
    // Solved it on my own, but couldn't do it in contest. Anyway, came up with the solution later.

172. 29/01/24
    i. *N-Queens                             -- /n-queens/                                       -- Time :  N/A             -- Difficulty : Hard
    // Needed help from Neetcode. Runtime could be improved.

173. 30/01/24
    i. N-Queen II                            -- /n-queens/                                       -- Time : < 8 min          -- Difficulty : Hard
    // Similar problem as before. Runtime should be improved (4ms -> 0ms). Completed all backtracking problem from the Top interview question list.

174. 31/01/24
    i. *Word Search II                       -- /word-search-ii/                                 -- Time :  N/A             -- Difficulty : Hard
    // Needed help, solved it on my own, but couldn't beat time limit (passed 61 out of 65 test cases). Runtime should be improved.

175. 01/02/24
    i. Candy                                 -- /candy/                                          -- Time : < 30 min          -- Difficulty : Hard
    // Third `Hard` problem solved on my own :) (Okay I'll stop counting for real). Runtime is horrible, but we'll take it since this is a hard problem. Runtime must be improved.

176. 05/02/24
    i. *Maximum Good Subarray Sum            -- /maximum-good-subarray-sum/                      -- Time :  N/A              -- Difficulty : Medium
    // Needed help, appeared on Weekly Contest 383. Runtime is 62ms, beats 100%.

177. 07/02/24
    i. *Minimum Time to Revert Word to Initial State I                                           -- Time :  N/A              -- Difficulty : Medium
                                             -- /minimum-time-to-revert-word-to-initial-state-i/
    // Needed help, appeared on WeeklyContest 383. Couldn't solve there, String Pattern matching algorithm. ;(. Runtime must be improved (0ms solution is easier to understand maybe).

178. 08/02/24
    i. *Median of two sorted arrays          -- /median-of-two-sorted-arrays/                    -- Time :  N/A              -- Difficulty : Hard
    // Need to revise.

179. 09/02/24
    i. Subarray Sum Equals K                 -- /subarray-sum-equals-k/                          -- Time : < 20 min          -- Difficulty : Medium
    // Runtime must be improved.

180. 12/02/24
    i. *Text Justification                   -- /text-justification/                             -- Time :  N/A              -- Difficulty : Hard
    // Needed help, :(. Need to revise.

181. 13/02/24
    i. *Maximal Square                       -- /maximal-square/                                 -- Time :  N/A              -- Difficulty : Medium
    // Learned from NeetCode. Understood the problem thoroughly. Runtime could improved (12ms -> 6ms).

182. 01/03/24
    i. *Find the Largest Area of Square Inside Two Rectangles                                    -- Time :  N/A              -- Difficulty : Medium
                                             -- /find-the-largest-area-of-square-inside-two-rectangles/

183. 09/03/24
    i. *Snakes and Ladders                   -- /snakes-and-ladders/                             -- Time :  N/A              -- Difficulty : Medium
    // Needed help, could be revised. Runtime could be improved, currently better than 42% (at 9ms).

184. 10/03/24 -- Weekly Contest 388
    i. Apple Redistribution into Boxes       -- /apple-redistribution-into-boxes/                -- Time : 05:59 min         -- Difficulty : Easy
    ii.Maximize Happiness of Selected Children
                                             -- /maximize-happiness-of-selected-children/        -- Time : 05:47 min         -- Difficulty : Medium

185. 11/03/24
    i. *Shortest Uncommon Substring in an Array  // This problem is also from Weekly Contest 388
    // Needed help, runtime cb improved     -- /shortest-uncommon-substring-in-an-array/         -- Time :  N/A              -- Difficulty : Medium

186. 12/03/24
    i. *Minimum Genetic Mutation            -- /minimum-genetic-mutation/                        -- Time :  N/A              -- Difficulty : Medium
    // Needed help, runtime could be improved (1ms -> 0ms). (Graph BFS)

187. 14/03/24
    i. Word Ladder                          -- /word-ladder/                                     -- Time :  < 20 min         -- Difficulty : Hard
    // Accepted on first try, runtime could/should be improved. (941ms -> 88ms). Best is around 32ms

188. 16/03/24
    i. *Best Time to Buy and Sell Stock III -- /best-time-to-buy-and-sell-stock-iii/             -- Time :  N/A              -- Difficulty : Hard
    // Runtime is very good, could be implemented in DP. Since, it's a 2D problem.

189. 17/03/24
    i. *Best Time to Buy and Sell Stock IV  -- /best-time-to-buy-and-sell-stock-iv/              -- Time :  N/A              -- Difficulty : Hard
    // Needed help, runtime could be improved (4ms -> 1ms). As always hard problems should be revised.

190. 18/03/24
    i. *Minimum Window Substring            -- /minimum-window-substring/                        -- Time :  N/A              -- Difficulty : Hard
    // Needed help, should revise later. Runtime is already best.

191. 20/03/24
    i. Substring with Concatenation of All Words -- /substring-with-concatenation-of-all-words/  -- Time : < 30 min          -- Difficulty : Hard
    // Runtime is better than 43% (at 1883 ms), best is 16ms. It could be improved.

192. 23/03/24
	i. *IPO                                 -- /ipo/                                             -- Time :  N/A              -- Difficulty : Hard
	// Solved it, but couldn't make it in time, so couldn't solve it. Runtime could be improved.


################# After a long break #########################

193. 06/05/24
    i. Design Twitter                      -- /design-twitter/                                    -- Time : > 1 hour         -- Difficulty : Medium
    // Took some time, but been able to come up with a solution. Runtime could be improved (9ms -> 7ms).

194. 10/05/24
    i. *Palindromic Substrings             -- /palindromic-substrings/                            -- Time :  N/A             -- Difficulty : Medium
    // Needed help, need to revise (along with longest palindromic substring). Runtime could be improved (17ms -> 5ms).

195. 12/05/24
    i. *Decode Ways                        -- /decode-ways/                                       -- Time :  N/A             -- Difficulty : Medium
    // Needed help, DP problem, need to revise and learn all dp problem.

196. 23/05/24
    i. *Time Based Key-Value Store         -- /time-based-key-value-store/                        -- Time :  N/A             -- Difficulty : Medium
    // Needed help, I solved it in brute force, couldn't beat time limit, learned a new Implementation of Map: `TreeMap`. Could be revised.

197. 27/06/24
    i. *Valid Parenthesis String           -- /valid-parenthesis-string/description/              -- Time :  N/A             -- Difficulty : Medium
    // Needed help (Neetcode). Runtime is best.

198. 29/06/24
    i. Partition Labels                    -- /partition-labels/                                  -- Time : <30min           -- Difficulty : Medium
    // Runtime is better than 48% (at 8ms). Runtime could be improved (8ms -> 0ms)

199. 01/07/24
    i. Merge Triplets to Form Target Triplet. -- /merge-triplets-to-form-target-triplet/          -- Time : <30min           -- Difficulty : Medium
    // Solved it on my own, runtime could be improved (1ms -> 0ms) :)

200. 06/07/24
    i. Fibonacci Number                    -- /fibonacci-number/                                  -- Time : <10 min          -- Difficulty : Easy
    i. N-th Tribonacci Number              -- /n-th-tribonacci-number/                            -- Time : <3 min           -- Difficulty : Easy

201. 10/07/24
    i. *Perfect Squares                    -- /perfect-squares/                                   -- Time :  N/A             -- Difficulty : Medium
    // Needed help, runtime could be improved. Could revise later.

202. 12/07/24
    i. Min Cost Climbing Stairs            -- /min-cost-climbing-stairs/                          -- Time : <20 min          -- Difficulty : Easy
    // DP problem, runtime is already best. Kinda similar to `Climbing Stairs` problem.

203. 13/07/24
    i. Delete and Earn                     -- /delete-and-earn/                                   -- Time : < 40min          -- Difficulty : Medium
    // DP problem, runtime is worst (although solved it by myself). Runtime should be improved (29ms -> 1ms).

204. 15/07/24
    i. *Minimum Cost for Cutting Cake I    -- /minimum-cost-for-cutting-cake-i/                   -- Time :  N/A             -- Difficulty : Medium
    // Encountered this problem in Weekly Contest406, couldn't solve it. Used greedy approach.

205. 29/07/24
    i. Minimum Falling Path Sum            -- /minimum-falling-path-sum/                          -- Time : < 20min          -- Difficulty : Medium

    // DP problem, runtime could be improved (7ms -> 0ms).

206. 31/07/24
    i. #Triangle  -- Revision -- Runtime : 0ms.

207. 01/08/24
    i. Maximal Square -- Revision -- Runtime : 10ms (previous was 14ms).

208. 03/08/24
    i. *Minimum Cost For Tickets           -- /minimum-cost-for-tickets/                          -- Time :  N/A             -- Difficulty : Medium
    // DP problem, needed help, runtime could be improved (3ms -> 0ms)

209. 06/08/24
    i. *Walls and Gates                    -- /walls-and-gates/                                   -- Time :  N/A             -- Difficulty : Medium
    // Needed help, also premium problem, solved it on Neetcode.io : https://neetcode.io/problems/islands-and-treasure

210. 07/08/24
    i. Longest Common Subsequence -- Revision -- Runtime: 5ms (best). Previous runtime was  9ms.

211. 08/08/24
    i. *Find the Count of Numbers Which Are Not Special                                           -- Time :  N/A             -- Difficulty : Medium
                                           -- /find-the-count-of-numbers-which-are-not-special/
    // From LeetCode contest 408, learned Sieve of Eratosthenes.

212. 09/08/24
    i. Shortest Distance After Road Addition Queries I                                            -- Time :  N/A             -- Difficulty : Medium
                                           -- /shortest-distance-after-road-addition-queries-i/


    // Appeared on LeetCode Weekly Contest 409, solved it then. Just improved runtime & learned a better approach. Runtime still could be improved. Should revise later.

213. 10/08/24
    i. Edit Distance -- Revision. Improved runtime (7ms -> 3ms). Should revise later. Recursive solution isn't easy to understand.

214. 12/08/24
    i. *Count the Number of Good Nodes     -- /count-the-number-of-good-nodes/                    -- Time :  N/A             -- Difficulty : Medium

    // This problem is from LeetCode Weekly Contest 410, couldn't solve it then, time limit exceeded. Learned the dfs approach.

215. 14/08/24
    i.  Longest Palindromic Substring -- Revised (in my secondary account), understood the solution better, runtime could be improved.
    ii. *Longest Palindromic Subsequence   -- /longest-palindromic-subsequence/                   -- Time :  N/A             -- Difficulty : Medium
    // DP -- Similar to the previous problem, but still needed some help. Runtime is okay, could be improved.

216. 15/08/24
    i. Word Break -- Revision. Improved runtime (4ms -> 1ms). Implemented with Trie;

217. 17/08/24
    i. *Minimum ASCII Delete Sum for Two Strings                                                  -- Time :  N/A             -- Difficulty : Medium
                                           -- /minimum-ascii-delete-sum-for-two-strings/
    // DP problem, almost solved it. Runtime is better than 99%. Similar to Edit distance problem. (Hope to get the next one).

218. 18/08/24
    i. *Maximum Energy Boost From Two Drinks                                                      -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximum-energy-boost-from-two-drinks/

    // DP problem, should have been able to solve myself, from LeetCodeWeeklyContest_411. Runtime is best.

219. 19/08/24
    i. *Count Square Submatrices with All Ones                                                    -- Time :  N/A             -- Difficulty : Medium
                                           -- /count-square-submatrices-with-all-ones/
    // Just short of one line. Runtime is beats 72% at 6ms. Similar to Maximal Square.

220. 20/08/24
    i. *Dungeon Game                       -- /dungeon-game/                                      -- Time :  N/A             -- Difficulty : Hard
    i. *Coin Change II                     -- /coin-change-ii/
    // DP Close to solving it, but needed help at the end. Runtime could be improved (2ms -> 0ms)

221. 23/08/24
    i. *Best Time to Buy and Sell Stock with Cooldown                                             -- Time :  N/A             -- Difficulty : Medium
                                           -- /best-time-to-buy-and-sell-stock-with-cooldown/
    // DP problem, needed help. Runtime is best.

222. 24/08/24
    i. *Coin Change II                     -- /coin-change-ii/                                    -- Time :  N/A             -- Difficulty : Medium
    // DP problem 2D, From NeetCode's Roadmap. Understood the solution, implemented the code by myself. Runtime could be improved (8ms -> 2ms).

223. 26/08/24
    i. *Count Almost Equal Pairs I         -- /count-almost-equal-pairs-i/                        -- Time :  N/A             -- Difficulty : Medium
    // Should have been able to solve it by myself. Anyway runtime is best as of now.

224. 28/08/24
    i. *Pacific Atlantic Water Flow        -- /pacific-atlantic-water-flow/                       -- Time :  N/A             -- Difficulty : Medium
    // Graph problem. Needed help, couldn't understand the problem quite clearly, runtime is better than 97% at 4ms.

225. 29/08/24
    i *Redundant Connection                -- /redundant-connection/                              -- Time :  N/A             -- Difficulty : Medium
    // UnionFind (by rank) problem, learned the algorithm then implemented myself. Runtime is 0ms.

226. 31/08/24
    i. Maximum Length of Pair Chain        -- /maximum-length-of-pair-chain/                      -- Time :  < 20min         -- Difficulty : Medium
    // DP problem, runtime should be improved (22ms -> 2ms). Just glad to solve.

227. 01/09/24
    i. *K-th Nearest Obstacle Queries      -- /k-th-nearest-obstacle-queries/                     -- Time :  N/A             -- Difficulty : Medium

    // PriorityQueue problem, should've solved it myself :(. Came up in weekly contest 413.

228. 02/09/24
    i. *Number of Longest Increasing Subsequence                                                  -- Time :  N/A             -- Difficulty : Medium
                                           -- /number-of-longest-increasing-subsequence/
    // DP problem, similar to Longest Increasing subsequence, runtime is better than 85%.

229. 03/09/24
    i. *Longest Arithmetic Subsequence     -- /longest-arithmetic-subsequence/                    -- Time :  N/A             -- Difficulty : Medium
    // DP problem, was close to solving it, just missed one point. Runtime should be improved (490ms -> 42ms).

230. 04/09/24
    i. *Longest Arithmetic Subsequence of Given Difference                                        -- Time :  N/A             -- Difficulty : Medium
                                           -- /longest-arithmetic-subsequence-of-given-difference/
    // DP problem, similar to Longest Arithmetic Subsequence, runtime is better than 55%, runtime should be improved (46ms -> 3ms)

231. 06/09/24
    i. *Russian Doll Envelopes             -- /russian-doll-envelopes/                            -- Time :  N/A             -- Difficulty : Hard
    // DP problem, similar to Longest increasing subsequence, but here given a matrix. Runtime is okay (at 51ms, it could be 31ms)

232. 07/09/24
    i. Find the Longest Valid Obstacle Course at Each Position                                    -- Time :  < 15 min        -- Difficulty : Hard
                                           -- /find-the-longest-valid-obstacle-course-at-each-position/
    // DP problem, used the binary search on longest increasing subsequence. Runtime should be improved (77ms -> 24ms).

233. 08/09/24
    i. *Uncrossed Lines                    -- /uncrossed-lines/                                   -- Time :  N/A             -- Difficulty : Medium
    // DP problem, similar to Longest common subsequence. Runtime is good enough (better then 97%).

234. 13/10/24
    i. *Best Time to Buy and Sell Stock with Transaction Fee                                      -- Time :  N/A             -- Difficulty : Medium
                                           -- /best-time-to-buy-and-sell-stock-with-transaction-fee/
    // DP problem, needed help, runtime should be improved (6ms -> 3ms), 3ms approach is little simpler to understand.

235. 15/10/24
    i. *Partition Array for Maximum Sum    -- /partition-array-for-maximum-sum/                   -- Time :  N/A             -- Difficulty : Medium
    // DP problem, very intuitive solution, couldn't have come up with my own. Need to revise. Learned from AlgoMonster.

236. 22/10/24
    i. *Unique Binary Search Trees         -- /unique-binary-search-trees/                        -- Time :  N/A             -- Difficulty : Medium
    // DP problem, needed help, Need to revise. Runtime beats 100% at 0ms.

237. 24/10/24
    i. *Unique Binary Search Trees II      -- /unique-binary-search-trees-ii/                     -- Time :  N/A             -- Difficulty : Medium
    // DP problem, needed help & need to revise. Runtime could be improved (1ms -> 0ms).

238. 26/10/24
    i. *House Robber III                   -- /house-robber-iii/                                  -- Time :  N/A             -- Difficulty : Medium
    // DP problem, learned from NeetCode, understood the problem thoroughly, then implemented myself. Runtime is best.

239. 27/10/24
    i. *Solving Questions With Brainpower  -- /solving-questions-with-brainpower/                 -- Time :  N/A             -- Difficulty : Medium
    // DP problem, should've been able to solve by myself. Runtime beats 98% at 5ms.

240. 29/10/24
    i. *Domino and Tromino Tiling          -- /domino-and-tromino-tiling/                         -- Time :  N/A             -- Difficulty : Medium
    // DP problem, needed help & need to revise. Runtime is best(0ms).

241. 31/10/24
    i. *Distinct Subsequences              -- /distinct-subsequences/                             -- Time :  N/A             -- Difficulty : Hard
    // DP problem, somewhat similar to LCS, runtime could be improved (8ms->2ms, though still better than 93%). Need to revise with LCS.

242. 01/11/24
    i. *Longest Increasing Path in a Matrix                                                       -- Time :  N/A             -- Difficulty : Hard
                                           -- https://leetcode.com/problems/longest-increasing-path-in-a-matrix/
    // DP problem, needed help, implemented with dfs with caching. Runtime could be improved (8ms -> 6ms). Need to revise.

243. 02/11/24
    i. Target Sum                          -- /target-sum/                                        -- Time : < 20 min         -- Difficulty : Medium
    // Solved it on my own, but runtime is horrible. Runtime must be improved (683ms -> 5-10ms)

244. 04/11/24
    i. *Regular Expression Matching        -- /regular-expression-matching/                       -- Time :  N/A             -- Difficulty : Hard
    // DP problem, learned from Neetcode, need to revise. Runtime is best at 1ms.

245. 05/11/24
    i. *Sum of Two Integers                -- /sum-of-two-integers/                               -- Time :  N/A             -- Difficulty : Medium
    // Bit manipulation problem, learned from Neetcode. Runtime is best.

246. 07/11/24
    i.  *Missing Number                    -- /missing-number/                                    -- Time :  N/A             -- Difficulty : Easy
    ii. *Counting Bits                     -- /counting-bits/                                     -- Time :  N/A             -- Difficulty : Medium
    // Bit manipulation problems, Learned from Neetcode.

247. 08/11/24
    i. *Burst Balloons                      -- /burst-balloons/                                   -- Time :  N/A             -- Difficulty : Hard
    // DP problem, learned from Neetcode. Runtime is horrible, need to revise & learn bottom-up approach.

248. 09/11/24
    i.  *Find Minimum Time to Reach Last Room I                                                   -- Time :  N/A             -- Difficulty : Medium
                                           -- /find-minimum-time-to-reach-last-room-i/
    ii. *Find Minimum Time to Reach Last Room II                                                  -- Time :  N/A             -- Difficulty : Hard
                                           -- /find-minimum-time-to-reach-last-room-ii/

    // Shortest Path algorithm problem, came up on weekly contest 422, couldn't solve it then, learned the algorithm. Runtime is good enough.

249. 11/11/24
    i. Adjacent Increasing Subarrays Detection II                                                 -- Time : < 40 min         -- Difficulty : Medium
                                           -- /adjacent-increasing-subarrays-detection-ii/
    // Couldn't solve it in Weekly Contest 423, later came up with the solution. Runtime is best as of now.

    ii. *Graph Valid Tree                  -- /graph-valid-tree/                                  -- Time :  N/A             -- Difficulty : Medium
    // Learned from Neetcode, pretty basic graph problem, should have been able to come up with the solution by myself. Premium problem, solved it in LintCode.
    // There is a solution with UnionFind, code is in the file, later could revise it.

250. 12/11/24
    i. *Number of Connected Components In An Undirected Graph                                     -- Time :  N/A             -- Difficulty : Medium
                                           -- /number-of-connected-components-in-an-undirected-graph/
    // Needed help, completed Graphs section in Neetcode.

251. 13/11/24
    i.   Balanced Binary Tree              -- /balanced-binary-tree/                              -- Time :  < 5 min         -- Difficulty : Easy
    ii.  Diameter of Binary Tree           -- /diameter-of-binary-tree/                           -- Time :  < 10 min        -- Difficulty : Easy
    iii. *Subtree of Another Tree          -- /subtree-of-another-tree/                           -- Time :  N/A             -- Difficulty : Easy
    // One problem to complete `Trees` section from Neetcode.

252. 14/11/24
    i. *Serialize and Deserialize Binary Tree                                                     -- Time :  N/A             -- Difficulty : Hard
                                           -- /serialize-and-deserialize-binary-tree/
    // Needed help, Completed `Trees` section from Neetcode. Runtime could be improved (19ms -> 1ms).

253. 15/11/24
    i. Sliding Window Maximum              -- /sliding-window-maximum/                            -- Time: < 50 min          -- Difficulty : Hard
    // Solved it by myself. Runtime is bad though. Must improve runtime. (632ms -> 4ms)

254. 16/11/24
    i. Encode and Decode Strings           -- /encode-and-decode-strings/                         -- Time: < 40 min          -- Difficulty : Medium
    // Premium Problem, solved it on NeetCode & LintCode: https://www.lintcode.com/problem/659/description, Completed `Array&Hashing` section on NeetCode.

255. 18/11/24
    i. Meeting Rooms                       -- /meeting-rooms/                                     -- Time : < 20 min         -- Difficulty : Easy
    // Premium problem, solved it on LintCode & Neetcode.io.

    ii. *Zero Array Transformation I       -- /zero-array-transformation-i/                       -- Time :  N/A             -- Difficulty : Medium
    // Came up in Weekly Contest 424, couldn't solve it then. Solved it with `imos` method, half understood the algorithm. Need to revise.

255. 20/11/24
    i. *Cheapest Flights Within K Stops    -- /cheapest-flights-within-k-stops/                   -- Time :  N/A             -- Difficulty : Medium
    // Learned from NeetCode, implemented using Bellman Form Algorithm, runtime should be improved (just use recursion).

256. 21/11/24
    i. *Network Delay Time                 -- /network-delay-time/                                -- Time :  N/A             -- Difficulty : Medium
    // Completed using Bellman Ford Algorithm, couldn't get the answer at the end. Runtime should be improved.
    // *** --> Also need to learn different algorithm like `shortest path algorithm` or `Dijkstra's Algorithm` for the same above two problem.

256. 23/11/24
    i. *Min Cost to Connect All Points     -- /min-cost-to-connect-all-points/                    -- Time :  N/A             -- Difficulty : Medium
    // Learned from NeetCode using Prim's Algorithm. Runtime could be improved (217ms -> 20ms)
    // *** --> Also need to learn different algorithm like `Prim's Algorithm (Optimal)`` or `Kruskal's Algorithm` for this problem.

257. 25/11/24
    i. *Reconstruct Itinerary              -- /reconstruct-itinerary/                             -- Time :  N/A             -- Difficulty : Hard
    // Needed help, implemented using Hierholzer's Algorithm. Runtime is almost best (ours 5ms, best 4ms).

258. 26/11/24
    i. Swim in Rising Water                -- /swim-in-rising-water/                              -- Time :  <35 min         -- Difficulty : Hard
    // Implemented using MinHeap(shortest path).. Runtime could be improved (10ms -> 0ms).

259. 27/11/24
    i. *Detect Squares                     -- /detect-squares/                                    -- Time :  N/A             -- Difficulty : Medium
    // Learned from NeetCode, Math & Geometry Problem, need to revise. Runtime is 146ms.

260. 28/11/24
    i. *Alien Dictionary                     -- /alien-dictionary/                                -- Time :  N/A             -- Difficulty : Hard
    // Advanced Graph problem, completed Advanced Graph list in NeetCode roadmap. Couldn't see runtime as it's a premium problem. Good to revise.

261. 30/11/24
    i. *Minimum Interval to Include Each Query                                                    -- Time :  N/A             -- Difficulty : Hard
                                           -- /minimum-interval-to-include-each-query/
    // Interval problem, needed help. Runtime could be improved (99ms -> 79ms). Revise is suggested.

262. 02/12/24
    i. Meeting Rooms II                      -- /meeting-rooms-ii/                                -- Time :  <40 min         -- Difficulty : Medium
    // Premium Problem. Completed Interval section in Neetcode. Solved it on NeetCode & LintCode (runtime beats 92.60% in LintCode at 262ms) // LintCode: /problem/919/

    ii. *Identify the Largest Outlier in an Array                                                 -- Time :  N/A             -- Difficulty : Medium
                                             -- /identify-the-largest-outlier-in-an-array/
    // Appeared in WeeklyContest426. Runtime is best.


263. 03/12/24
    i. ~Multiply Strings                   -- Revised. Runtime could be improved (3ms -> 1ms).

*** Completed NeetCode, now just have to go through it again & also solve similar problems.

264. 04/12/24
    i. ~Sliding Window Maximum             -- Improved Runtime. Runtime beats 98.53% now.

265. 05/12/24
    i. *Maximize the Number of Target Nodes After Connecting Trees I                              -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximize-the-number-of-target-nodes-after-connecting-trees-i/
    // Appeared on WeeklyContest426, couldn't understand the problem statement, let alone solve it. Still can't get it.
    // Understood the solution, then implemented it. Runtime is 510ms, best is 33ms (but it goes over my head).

    
266. 07/12/24
    i. *Partition Equal Subset Sum          -- Revised & improved runtime (500ms+ -> 25ms)

267. 11/12/24
    i. *Maximum Subarray Sum With Length Divisible by K                                           -- Time :  N/A             -- Difficulty : Medium
                                            -- /maximum-subarray-sum-with-length-divisible-by-k/
    // Appeared on WeeklyContest427, couldn't solve it then. Runtime could be improved. (7ms -> 4ms). Need to revise must.

268. 12/12/24
    i. Group Anargrams                     -- Improved runtime (15ms -> 5ms).
    // Learned a good approach to solve these type of string problem.

269. 13/12/24
    i. *Maximum Area Rectangle With Point Constraints I                                           -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximum-area-rectangle-with-point-constraints-i/
    // Came up in WeekContest427, couldn't solved it. Runtime could be improved (17->9ms->1ms). Need to revise.

270. 22/12/24
    i. *Maximum Number of Distinct Elements After Operations                                      -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximum-number-of-distinct-elements-after-operations/
    // Kinda DP problem, came in WeeklyContest429 (didn't participate though). Need to revise.

271. 23/12/24
    i. *Maximize Amount After Two Days of Conversions                                             -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximize-amount-after-two-days-of-conversions/
    // Graph problem from WeeklyContest428. Need to revise.



##################################           2025           ###############################################
########### :)



272. 01/01/25
    i. *Design HashSet                     -- /design-hashset/                                    -- Time : N/A              -- Difficulty: Easy
    i. Design Hashmap                      -- /design-hashmap/                                    -- Time : < 10 min         -- Difficulty: Easy

273. 02/01/25
    i. Sort an Array                       -- /sort-an-array/                                     -- Time : < 15 min         -- Difficulty: Medium
    // Used Merge Sort, runtime could be half (22ms->11ms)
    ii.Concatenation of Array              -- /concatenation-of-array/                            -- Time : < 7 min          -- Difficulty: Easy

274. 03/01/25
    i. Range Sum Query 2D - Immutable      -- /range-sum-query-2d-immutable/                      -- Time :  < 45 min        -- Difficulty : Medium
    // Prefix Sum problem, Runtime could be improved (116ms -> 101ms). Need to learn the 2D prefix logic

275. 04/01/25
    i. *First Positive Integer             -- /first-missing-positive/                            -- Time :  N/A             -- Difficulty : Hard
    // Hard problem, learned about `Cycle Sort Algorithm`, used it to solve the problem. Could be revised.

276. 05/01/25
    i. Attended Weekly Contest 431. Didn't go well.

277. 06/01/25
    i. # 3Sum -- revised & improved runtime (35ms -> 24ms).

278. 07/01/25
    i. 4Sum                                -- /4sum/                                              -- Time :  < 17 min        -- Difficulty : Medium
    // Runtime could be improved (24ms -> 7ms).

279. 08/01/25
    i. *Boats to Save People               -- /boats-to-save-people/                              -- Time :  N/A             -- Difficulty : Medium
    // Pretty easy problem, didn't read the problem description thoroughly.

280. 09/01/25
    i. Find K Closest Elements             -- /find-k-closest-elements/                           -- Time :  < 57 min        -- Difficulty : Medium
    // Took 10-12 minutes more, runtime could also be better (14ms->0ms).

281. 10/01/25
    i. Asteroid Collision                  -- /asteroid-collision/                                -- Time :  < 33 min        -- Difficulty : Medium
    // Stack problem, took 2 submissions. Runtime should be improved (185ms -> 1ms)

282. 11/01/25
    i. Decode String                       -- /decode-string/                                     -- Time :  < 27 min        -- Difficulty : Medium
    // Stack Problem, accepted on first try, runtime could be improved (2ms -> 0ms).

283. 12/01/25
    i. Attended WeeklyContest432, didn't go well.

284. 13/01/25
    i. *Maximum Amount of Money Robot Can Earn                                                    -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximum-amount-of-money-robot-can-earn/
    // Camp up in the weeklyContest432, couldn't solve it then. Runtime is fine.

285. 14/01/25
    i. Online Stock Span                   -- /online-stock-span/                                 -- Time: < 20 min          -- Difficulty : Medium
    // Runtime is horrible, need to learn the optimized solution.

286. 15/01/25
    i.  Baseball Game                      -- /baseball-game/                                     -- Time: < 7 min           -- Difficulty : Easy
    ii. Reverse String                     -- /reverse-string/                                    -- Time: < 3 min           -- Difficulty : Easy
    // Pretty easy problems. Runtime is better than most.

287. 16/01/25
    i. Maximum Frequency Stack             -- /maximum-frequency-stack/                           -- Time: < 44 min          -- Difficulty : Hard
    // Runtime is better than 49%, it could be improved (33ms -> 24ms).

288. 17/01/25
    i. LFU Cache                           -- /lfu-cache/                                         -- Time: < 65 min          -- Difficulty : Hard
    // Runtime is better than 95%, it could be improved (50ms -> 35ms).

289. 18/01/25
    i. Capacity To Ship Packages Within D Days                                                    -- Time : < 25 min         -- Difficulty : Medium
                                           -- /capacity-to-ship-packages-within-d-days/
    // Similar to Koko Eating Bananas, revised that first, then solved it. Runtime is better than 99.79% at 7ms.

290. 19/01/25
    i. Attended WeeklyContest 433, ranking is better than before, although solved one problem.

291. 20/01/25
    i. Guess Number Higher or Lower        -- /guess-number-higher-or-lower/                      -- Time: < 15 min          -- Difficulty : Easy
    // Took two submission, overlooked one edge cases. Runtime is best.

292. 22/01/25
    i. Design Circular Queue               -- /design-circular-queue/                             -- Time: < 25 min          --  Difficulty : Medium
    // LinkedList problem, accepted on first try, runtime is good enough.

293. 28/01/25
    i. *Search in Rotated Sorted Array II  -- /search-in-rotated-sorted-array-ii/                 -- Time :  N/A             -- Difficulty : Medium
    // Needed Help, runtime is best.

294. 29/01/25
    i. *Longest Happy String               -- /longest-happy-string/                              -- Time :  N/A             -- Difficulty : Medium
    // Needed Help, runtime is best.

295. 30/01/25
    i. Reorganize String                   -- /reorganize-string/                                 -- Time: < 10 min          --  Difficulty : Medium
    // Similar to Longest Happy String, solved it using same approach. Runtime is at 1ms (best is 0ms).

296. 01/02/25
    i. Single-Threaded CPU                 -- /single-threaded-cpu/                               -- Time: < 30 min          --  Difficulty : Medium
    // Heap Problem, runtime could be improved (168ms -> 88ms).

297. 02/02/25
    i. Participated in WeeklyContest435, didn't do well :(

298. 03/02/25
    i. Car Pooling                         -- /car-pooling/                                      -- Time: < 10 min          --  Difficulty : Medium
    // Heap problem, took a couple of submissions, runtime is better than 46% (6ms). Runtime could be improved (6ms -> 1ms).

299. 04/02/25
    i. Letter Case Permutation             -- /letter-case-permutation/                           -- Time: < 17 min          --  Difficulty : Medium
    // Accepted on first submission, similar to 'Subsets' problem, runtime is 2ms (best is 1ms).

300. 05/02/25
    i. *Partition to K Equal Sum Subsets   -- /partition-to-k-equal-sum-subsets/                  -- Time :  N/A             -- Difficulty : Medium
    // Backtracking problem, needed help. Runtime is almost best 3ms (best is 1ms).

301. 07/02/25
    i. *Extra Characters in a String       -- /extra-characters-in-a-string/                      -- Time :  N/A             -- Difficulty : Medium
    // Trie + Backtracking problem, Needed help. Runtime is best.

302. 08/02/25
    i. *Maximum Manhattan Distance After K Changes                                                -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximum-manhattan-distance-after-k-changes/
    // Appeared on WeeklyContest435. Runtime is better than 95%.

303. 09/02/25
    i. Participated in WeeklyContest436, didn't go well.

304. 10/02/25
    i. *Assign Elements to Groups with Constraints                                                -- Time :  N/A             -- Difficulty : Medium
                                           -- /assign-elements-to-groups-with-constraints/
    // Appeared in WeeklyContest436, couldn't solve then. Classic problem. Must revise.

305. 11/02/25
    i. Delete Leaves With a Given Value    -- /delete-leaves-with-a-given-value/                  -- Time: < 20 min          --  Difficulty : Medium
    // Runtime is bad, need to improve runtime.

306. 13/02/25
    i. Insert into a Binary Search Tree    -- /insert-into-a-binary-search-tree/                  -- Time: < 10 min          --  Difficulty : Medium
    // Runtime is best. Hopefully we're covered in Trees DS.

307. 14/02/25
    i. Open the Lock                       -- /open-the-lock/                                     -- Time: < 55 min          --  Difficulty : Medium
    // Needed a little help, solved it mostly by myself. Classic BFS problem. Runtime is better than 85% (at 76ms, best is 5ms).

308. 15/02/25
    i. Accounts Merge j                    -- /accounts-merge/                                    -- Time: < 40 min          --  Difficulty : Medium
    // Solved it on my own, runtime must be improved (166ms -> 14ms). Best is 0ms.

309. 17/02/25
    i. *Select K Disjoint Special Substrings                                                      -- Time :  N/A             -- Difficulty : Medium
                                           -- /select-k-disjoint-special-substrings/
    // Appeared in WeeklyContest437. Good problem. Runtime is almost best at 8ms (beats 93%).

310. 19/02/25
    i. Eat Pizzas!                         -- /eat-pizzas/                                        -- Time: < 20 min          --  Difficulty : Medium
    // Appeared in WeeklyContest437. Runtime is good at 62ms (beats 74%).

311. 20/02/25
    i. !Assign Elements to Groups with Constraints  -- Improved Runtime (800+ms -> 9ms). Learned a very intuitive approach.

312. 21/02/25
    i. *Subarray Sums Divisible by K       -- /subarray-sums-divisible-by-k/                      -- Time :  N/A             -- Difficulty : Medium
    // Learned from multiple sources, found a great resource USACO Guide.

313. 22/02/25
    i. String Compression                  -- /string-compression/                                -- Time: < 33 min          --  Difficulty : Medium
    // Took a couple of submissions, got accepted on third attempt. Runtime is almost best (1ms).

314. 23/02/25
    i. Participated in WeeklyContest438 -- Ranking is my all time top. :) (<3500)

315. 25/02/25
    i. #Subarray Sum Equals K              -- Improved runtime by a mile. (used prefix sum).

316. 27/02/25
    i. *Number of Sub-arrays With Odd Sum  -- /number-of-sub-arrays-with-odd-sum/                 -- Time :  N/A             -- Difficulty : Medium
    // Needed help. Runtime could be improved.


316. 23/03/25
    i. Properties Graph                    -- /properties-graph/                                  -- Time : < 30 min         -- Difficulty : Medium
    // Runtime is better than 99%.

317. 28/03/25
    i. *Choose K Elements With Maximum Sum -- /choose-k-elements-with-maximum-sum/                -- Time :  N/A             -- Difficulty : Medium
    // Needed help, solved it using the same intuition I had. Runtime beats 68% at 157ms. (O(nlog(n)) -- Runtime complexity

318. 03/04/25
    i. *Maximum Number of Points From Grid Queries                                                -- Time :  N/A             -- Difficulty : Hard
                                           -- /maximum-number-of-points-from-grid-queries/
    // Understood it really well, runtime could be improved. (182ms -> 94ms -> 32ms).

319. 08/04/25
    i. *Maximize Active Section with Trade I                                                      -- Time :  N/A             -- Difficulty : Medium
                                           -- /maximize-active-section-with-trade-i/
    // Needed help, runtime is good enough.

320. 09/04/25
    i. *Closest Equal Element Queries      -- /closest-equal-element-queries/                     -- Time :  N/A             -- Difficulty : Medium
    // Needed help, contest problem, runtime is fine.

321. 12/04/25
    i. Matchsticks to Square               -- /matchsticks-to-square/                             -- Time : < 15 min         -- Difficulty : Medium
    // Similar to another problem, runtime is good enough.

322. 13/04/25
    i. Attended WeeklyContest445. -> Ranking should have been better.

323. 15/04/25
    i. *Minimum Height Trees               -- /minimum-height-trees/                              -- Time :  N/A             -- Difficulty : Medium
    // Very intuitive problem, runtime could be improved (40ms -> 14ms).

324. 19/04/25
    i. *Count the Number of Fair Pairs     -- /count-the-number-of-fair-pairs/                    -- Time :  N/A             -- Difficulty : Medium
    // Runtime could be improved. Should learn the two pointers approach.

325. 21/04/25
    i. *Find X Value of Array I            -- /find-x-value-of-array-ii/                          -- Time :  N/A             -- Difficulty : Medium


326. 22/04/25
    i. *Count the Number of Good Subarrays -- /count-the-number-of-good-subarrays/                -- Time :  N/A             -- Difficulty : Medium
    // Need to revise, very intuitive problem. Solve similar ones. Runtime is good enough.

327. 28/04/25
    i. *Count Covered Buildings            -- /count-covered-buildings/                           -- Time :  N/A             -- Difficulty : Medium
    // Appeared in WeeklyContest447. Runtime is good enough.

328. 01/05/25
    i. Path Existence Queries in a Graph I -- /path-existence-queries-in-a-graph-i/               -- Time :  < 15 min        -- Difficulty : Medium
    // Union find problem, runtime is good enough.

329. 04/05/25
    i. Attended WeeklyContest448, didn't go very well, only solved 1 problem.

330. 05/05/25
    i. *Fill a Special Grid                --/fill-a-special-grid/                                -- Time :  N/A             -- Difficulty : Medium
    // From WC448, simple divide & conquer problem.

331. 06/05/25
    i. Cleared the basic of Bit Manipulation, mostly easy ones, solved a new ones also.

332. 07/05/25
    i. My Calendar I                       -- /my-calendar-i/                                     -- Time :  < 15 min        -- Difficulty : Medium
    // Needed a hint, but cleared it on my own, Runtime should be improved.

333. 09/05/25
    i. *My Calendar II                     --/my-calendar-ii/                                     -- Time :  N/A             -- Difficulty : Medium
    // Needed help, very intuitive interval problem.

334. 10/05/25
    i. Minimum Equal Sum of Two Arrays After Replacing Zeros                                      -- Time :  < 20 min        -- Difficulty : Medium
                                           -- /minimum-equal-sum-of-two-arrays-after-replacing-zeros/
    // Accepted on first try, Greedy problem, runtime is fine.

335. 11/05/25
    i. Participated in WeeklyContest 449 -- Ranked in early 4000s

336. 12/05/25
    i. *Find the Longest Equal Subarray    -- /find-the-longest-equal-subarray/                   -- Time :  N/A             -- Difficulty : Medium
    // Needed a little help, sliding window problem. Runtime is good enough (83ms), can be reduced to 12ms.

337. 13/05/25
    i. Count Complete Subarrays in an Array                                                       -- Time :  < 20 min        -- Difficulty : Medium
                                           -- /count-complete-subarrays-in-an-array/
    // Accepted on first try. Runtime improved. Sliding Window problem.

338. 14/05/25
    i. Maximum Beauty of an Array After Applying Operation                                        -- Time :  < 15 min        -- Difficulty : Medium
                                           -- /maximum-beauty-of-an-array-after-applying-operation/
    // Runtime is slow, need to improve runtime. (139ms -> 7ms).

339. 16/05/25
    i. Length of Longest Subarray With at Most K Frequency                                        -- Time :  < 15 min        -- Difficulty : Medium
                                           -- /length-of-longest-subarray-with-at-most-k-frequency/
    // Accepted on first try. Runtime should be improved (83ms -> 35ms).

340. 17/05/25
    i. Revised Evaluate Division. -> Need to solve similar problems.

341. 18/05/25
    i. Participated in WeeklyContest 450, didn't go very well.

342. 19/05/25
    i. *Minimum Swaps to Sort by Digit Sum -- /minimum-swaps-to-sort-by-digit-sum/                -- Time :  N/A             -- Difficulty : Medium
    // From WeeklyContest450, runtime is good.

343. 20/05/25
    i. *Grid Teleportation Traversal       -- /grid-teleportation-traversal/                      -- Time :  N/A             -- Difficulty : Medium
    // BFS problem from WeeklyContest450, understood it well, runtime is also fine.

344. 21/05/25
    i. Populating Next Right Pointers in Each Node                                                -- Time :  < 20min         -- Difficulty : Medium
                                           -- /populating-next-right-pointers-in-each-node/
    // Implemented using simple BFS, just added an extra field unnecessarily, could be removed. Runtime could also be improved (4ms -> 0ms).
    ii. # Revised Course Schedule, learned Khans' algorithm (Topological Sort) from William Fiset.

345. 23/05/25
    i. Number of Provinces                 -- /number-of-provinces/description/                   -- Time :  < 20min         -- Difficulty : Medium
    // Needed help to understand the problem, implemented by Myself. Need to learn the Union Find solution.

346. 24/05/25
    i. Find if Path Exists in Graph        -- /find-if-path-exists-in-graph/                      -- Time :  < 15min         -- Difficulty : Easy
    // Learned Union Find from William Fiset, solved this using the Union Find. Runtime is good enough.

347. 25/05/25
    i. Participated in WeeklyContest451, didn't go very well. Solved 2 problems, but time was too long.

348. 28/05/25
    i. *Redundant Connection II            -- /redundant-connection-ii/                           -- Time :  N/A             -- Difficulty : Hard
    // It was a Hard problem, implemented using Union Find. I've taken a liking to this Data Structure.

349. 30/05/25
    i. *Find Closest Node to Given Two Nodes                                                      -- Time :  N/A             -- Difficulty : Medium
                                           -- /find-closest-node-to-given-two-nodes/
    // Daily problem, Graph kind of problem. Runtime is fine.

350. 08/06/25
    i. Participated in WeeklyContest453, went real bad. Couldn't even solve one problem. Should have solved at least 2.

351. 09/06/25
    i. *Transform Array to All Equal Elements                                                     -- Time :  N/A             -- Difficulty : Medium
                                           -- /transform-array-to-all-equal-elements/
    // Used Greedy Approach. Should have solved myself. :(

352. 11/06/25
    i. *Count the Number of Computer Unlocking Permutations                                       -- Time :  N/A             -- Difficulty : Medium
                                           -- /count-the-number-of-computer-unlocking-permutations/description/
    // Got the idea right, didn't implement it.

353. 15/06/25
    i. *Max Difference You Can Get From Changing an Integer                                       -- Time :  N/A             -- Difficulty : Medium
                                           -- /max-difference-you-can-get-from-changing-an-integer/
    // Needed help to understand the problem, came up with the solution by myself.





##################################           After a long break           ###############################################

i. ~Longest Repeating Character Replacement  -- Revised, runtime is better than 98% at 6ms. Used Sliding Window Algorithm. 

ii. ~3Sum      -- Revised. Used Sliding Window.

27/07/25 -> i. ~Container With Most Water, revised improved runtime. (Two Pointer).

30/07/25 -> i. ~Linked List Cycle -- Floyd Cycle Detection is used to improve the runtime from 5ms to 0ms.

01/08/25 -> i.  ~Find the Duplicate Number -- Implemented using Floyd Hare and Tortoise Algorithm...
            ii. ~Happy Number              -- Implemented using Floyd Hare and Tortoise Algorithm...

02/08/25 -> i. Best Time to Buy and Sell Stock II -- Used Greedy and DP approach, learned both. Greedy performs better.
            ii. Best Time to Buy and Sell Stock   -- Very simple one.
        //  Next day -- Best Time to Buy and Sell Stock III -- Hard problem, learn the full fledge DP approach.

03/09/25 -> i. ~MyCalender I, improved runtime, learned TreeMap approach.

***. **/**/**
    i. *Dummy problem name                 -- /dummy-problem-name-just-to-see/                    -- Time :  N/A             -- Difficulty : Medium

***. **/**/**
    i. Long long dummy dummy dummy dummy dummy problem                                            -- Time :  N/A             -- Difficulty : Hard
                                           -- /long dummy dummy dummy dummy dummy problem/

*** Bottom of the page // Last_section.




